{% extends 'dashboard.html.twig' %}

{% block title %}Мониторинг звонков{% endblock %}

{% block body %}
    <!--<link rel="stylesheet" href="/css/audiojs.css">-->
    <div class="panel-search">
        <div class="container">
            <form id="formSearch">
                <div class="row">
                    <div class="three columns">
                        <label>Время звонка:</label>
                    </div>
                    <div class="nine columns">
                        <div class="row">
                            <div class="six columns">
                                <div class="row">
                                    <div class="three columns">
                                        <label>От:</label>
                                    </div>
                                    <div class="nine columns">
                                        <input id="startDate" name="start_date" type="text" class="u-full-width">
                                    </div>
                                </div>
                            </div>
                            <div class="six columns">
                                <div class="row">
                                    <div class="three columns">
                                        <label>До:</label>
                                    </div>
                                    <div class="nine columns">
                                        <input id="endDate" name="end_date" type="text" class="u-full-width">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="three columns">
                        <label>Направление:</label>
                    </div>
                    <div class="nine columns">
                        <label class="inline">
                            <input type="radio" name="direction" value="incoming">
                            <span class="label-body">Входящие</span>
                        </label>
                        <label class="inline">
                            <input type="radio" name="direction" value="outgoing">
                            <span class="label-body">Исходящие</span>
                        </label>
                        <label class="inline">
                            <input type="radio" name="direction" value="any" checked>
                            <span class="label-body">Любое направление</span>
                        </label>
                    </div>
                </div>
                <div class="row">
                    <div class="three columns">
                        <label>По номеру:</label>
                    </div>
                    <div class="nine columns">
                        <input class="" type="text" name="phone">
                    </div>
                </div>
                <div class="row">
                    <div class="three columns">
                        <label>По оператору:</label>
                    </div>
                    <div class="nine columns">
                        <input class="" type="text" name="operator">
                    </div>
                </div>
                <div class="row">
                    <div class="three columns">
                        <label>По статусу:</label>
                    </div>
                    <div class="nine columns">
                        <select name="status">
                            <option value="answered">Отвеченные</option>
                            <option value="no_answered">Не отвеченные</option>
                            <option value="any">Любая причина</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="three columns">
                        <label>Количество записей:</label>
                    </div>
                    <div class="nine columns">
                        <input id="numberOfRecords" class="" type="number" name="number_of_records" value="100" min="1" max="1000" step="1">
                    </div>
                </div>
                <div class="row">
                    <div class="three columns">&nbsp;</div>
                    <div class="nine columns">
                        <button id="submitButton"><i data-icon="#" class="icon"></i>Поиск звонков</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="panel-helper">
            <button class="btn-helper" data-action="minimize"><i class="icon icon-basic-eye"></i></button>
        </div>
    </div>
    <div class="container">
        <div class="row" id="resultData"></div>
    </div>
    <div class="fly-panel disabled" id="flypanel">
        <div class="wrap">
            <div class="head"><span class="show-hide-toolbar" data-action="hide" data-parent="flypanel">Скрыть</span></div>
            <div class="body"></div>
        </div>
    </div>


{% endblock %}
{% block javascripts %}
    <script src="/js/audiojs/audio.min.js"></script>
    <script>
        var audioObject = null;
        (function (d, w) {
            var formSearch = d.getElementById('formSearch');
            var startDate = d.getElementById('startDate');
            var endDate = d.getElementById('endDate');
            var numberOfRecords = d.getElementById('numberOfRecords');
            var buttonSubmit = d.getElementById('submitButton');
            var resultData = d.getElementById('resultData');
            var flypanel = d.getElementById('flypanel');


            var strDate = moment().format('DD.MM.YYYY');
            initDatePicker(startDate);
            startDate.value = strDate;
            initDatePicker(endDate);
            endDate.value = strDate;

            buttonSubmit.addEventListener('click', function (e) {
                e.preventDefault();
                var form = new FormData(formSearch);
                sendData(formSearch.action, form, function (data) {
                    var objectData = JSON.parse(data);
                    if (objectData.hasOwnProperty('rows')) {
                        drawData(objectData.rows);
                    }
                })
            });

            d.addEventListener('click', function (e) {
                var target = e.target;
                var action = target.getAttribute('data-action');
                if (!action && target.tagName === 'I') {
                    target = target.parentNode;
                }
                action = target.getAttribute('data-action');
                if (action) {
                    e.preventDefault();
                    if (action === 'minimize') {
                        if (target.parentNode.parentNode.classList.contains('minimized')) {
                            target.parentNode.parentNode.classList.remove('minimized');
                        } else {
                            target.parentNode.parentNode.classList.add('minimized');
                        }
                    }
                    if (action === 'play-sound') {
                        var body = flypanel.querySelector('.body');
                        clearNode(body);
                        body.appendChild(el('audio', {src: ''}));


                        d.querySelector('audio').src = target.dataset.sound;
                        audiojs.events.ready(function() {
                            audioObject = audiojs.createAll();
                        });

                        flypanel.classList.remove('disabled');
                    }
                    if (action === 'hide') {
                        var parentId = target.dataset.parent;
                        var parent = d.getElementById(parentId);
                        if (parent) {
                            if (parent.classList.contains('hide')) {
                                parent.classList.remove('hide');
                                target.innerText = 'Скрыть';
                            } else {
                                parent.classList.add('hide');
                                target.innerText = 'Показать';
                            }
                        }

                    }
                }
            });

            numberOfRecords.addEventListener('keydown', onKeydownDigit);

            function initDatePicker(inputNode) {
                picker = new Pikaday({
                    field: inputNode,
                    firstDay: 1,
                    format: 'DD.MM.YYYY',
                    //yearRange: [minYear, maxYear],
                    defaultDate: strDate,
                    i18n: {
                        previousMonth : 'Назад',
                        nextMonth     : 'Вперед',
                        months        : ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],
                        weekdays      : ['Воскресенье','Понедельник','Вторник','Среда','Четверг','Пятница','Суббота'],
                        weekdaysShort : ['Вс','Пн','Вт','Ср','Чт','Пт','Сб']
                    }
                });
            }

            function onKeydownDigit(e) {

                if ([46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||
                    (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||
                    (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    return;
                }
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            }

            function drawData(data) {
                clearNode(resultData);

                var rowsFragment = d.createDocumentFragment();

                Array.from(data).forEach(function (value) {
                    //console.log(value.billsec);
                    rowsFragment.appendChild(
                        el('tr', {}, [
                            el ('td', {}, value.calldate ),
                            el ('td', {}, value.src ),
                            el ('td', {}, value.dst ),
                            el ('td', {}, value.disposition ),
                            el ('td', {}, value.billsec.toString() ),
                            el ('td', {}, [
                                el ('a', { 'data-sound': '/dashboard/sound?id=' + value.id, 'data-action': 'play-sound', 'href': '#' }, 'Звук')
                            ])
                        ])
                    );
                });

                var tableNode = el('table', {width: '100%'},
                [
                    el ('thead', {}, [
                        el ('th', {}, 'Дата'),
                        el ('th', {}, 'Отправитель'),
                        el ('th', {}, 'Получатель'),
                        el ('th', {}, 'Статус'),
                        el ('th', {}, 'Длительность'),
                        el ('th', {}, 'Запись')
                    ]),
                    el ('tbody', {}, [
                        rowsFragment
                    ])
                ]);
                resultData.appendChild(tableNode);
            }

        })(document, window);
    </script>
{% endblock %}
